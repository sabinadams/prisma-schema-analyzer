{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "RemixLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/remix-serverless-app-dev-remix"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "remix-serverless-app",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remix-serverless-app-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remix-serverless-app-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "remix-serverless-app",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PrismaLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/remix-serverless-app/dev/1652297675942-2022-05-11T19:34:35.942Z/prisma.zip"
        },
        "LayerName": "prisma",
        "Description": "Layer for Prisma Engine"
      }
    },
    "RemixLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/remix-serverless-app/dev/1652298103914-2022-05-11T19:41:43.914Z/remix.zip"
        },
        "Handler": "server/index.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "remix-serverless-app-dev-remix",
        "MemorySize": 1024,
        "Timeout": 6,
        "Description": "My Remix app!",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "PRISMA_FMT_BINARY": "/opt/nodejs/@prisma/engines/prisma-fmt-rhel-openssl-1.0.x",
            "PRISMA_QUERY_ENGINE_BINARY": "/opt/nodejs/@prisma/engines/libquery_engine-rhel-openssl-1.0.x.so.node",
            "PRISMA_QUERY_ENGINE_LIBRARY": "/opt/nodejs/@prisma/engines/libquery_engine-rhel-openssl-1.0.x.so.node"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "PrismaLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "RemixLogGroup"
      ]
    },
    "RemixLambdaVersionnvwS8yBjk48oVPoCNhXJujnI1QyvSp0xfrTGo2MAI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RemixLambdaFunction"
        },
        "CodeSha256": "OGb8oMn2fhBEirFUvet1fZ6rIN6TcliiVRZOy3TSCXs=",
        "Description": "My Remix app!"
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-remix-serverless-app",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "RemixLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RemixLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRemix": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RemixLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteAnyProxyVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "ANY /{proxy+}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRemix"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRemix"
    },
    "WebsiteBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {}
    },
    "WebsiteOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Origin Access Identity to Access remix-serverless-app Website Bucket dev"
        }
      }
    },
    "WebsiteBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebsiteBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebsiteBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              },
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebsiteOriginAccessIdentity",
                    "S3CanonicalUserId"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "RemixCachePolicy": {
      "Type": "AWS::CloudFront::CachePolicy",
      "Properties": {
        "CachePolicyConfig": {
          "Name": "RemixCachePolicy",
          "DefaultTTL": 60,
          "MinTTL": 0,
          "MaxTTL": 60,
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "HeadersConfig": {
              "HeaderBehavior": "none"
            },
            "EnableAcceptEncodingGzip": true,
            "QueryStringsConfig": {
              "QueryStringBehavior": "all"
            },
            "CookiesConfig": {
              "CookieBehavior": "all"
            }
          }
        }
      }
    },
    "CDN": {
      "Type": "AWS::CloudFront::Distribution",
      "DependsOn": [
        "WebsiteBucket",
        "HttpApi"
      ],
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebsiteBucket",
                  "DomainName"
                ]
              },
              "Id": "StaticOrigin",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "/",
                    [
                      "origin-access-identity",
                      "cloudfront",
                      {
                        "Ref": "WebsiteOriginAccessIdentity"
                      }
                    ]
                  ]
                }
              },
              "OriginPath": "/website"
            },
            {
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.us-east-1.amazonaws.com"
                  ]
                ]
              },
              "Id": "RemixOrigin",
              "OriginCustomHeaders": [
                {
                  "HeaderName": "X-Forwarded-Host",
                  "HeaderValue": "dgys6qahspaec.cloudfront.net"
                }
              ],
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              }
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE"
            ],
            "CachedMethods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "Compress": true,
            "CachePolicyId": {
              "Ref": "RemixCachePolicy"
            },
            "TargetOriginId": "RemixOrigin",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "CacheBehaviors": [
            {
              "PathPattern": "_static/*",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "CachedMethods": [
                "GET",
                "HEAD"
              ],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": true,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "TargetOriginId": "StaticOrigin",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "PathPattern": "/favicon.*",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "CachedMethods": [
                "GET",
                "HEAD"
              ],
              "Compress": false,
              "ForwardedValues": {
                "QueryString": false,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "TargetOriginId": "StaticOrigin",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "PathPattern": "/prism-duotone-sea.css",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "CachedMethods": [
                "GET",
                "HEAD"
              ],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": true,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "TargetOriginId": "StaticOrigin",
              "ViewerProtocolPolicy": "redirect-to-https"
            }
          ],
          "Comment": "remix-serverless-app-dev",
          "Enabled": true,
          "HttpVersion": "http2",
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": true
          }
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-remix-serverless-app-dev-ServerlessDeploymentBucketName"
      }
    },
    "PrismaLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "PrismaLambdaLayer"
      },
      "Export": {
        "Name": "sls-remix-serverless-app-dev-PrismaLambdaLayerQualifiedArn"
      }
    },
    "PrismaLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "e5444bf4a4088968f8a5d84875af09f22eb185f8",
      "Export": {
        "Name": "sls-remix-serverless-app-dev-PrismaLambdaLayerHash"
      }
    },
    "PrismaLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/remix-serverless-app/dev/1652297675942-2022-05-11T19:34:35.942Z/prisma.zip",
      "Export": {
        "Name": "sls-remix-serverless-app-dev-PrismaLambdaLayerS3Key"
      }
    },
    "RemixLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RemixLambdaVersionnvwS8yBjk48oVPoCNhXJujnI1QyvSp0xfrTGo2MAI"
      },
      "Export": {
        "Name": "sls-remix-serverless-app-dev-RemixLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-remix-serverless-app-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-remix-serverless-app-dev-HttpApiUrl"
      }
    },
    "WebsiteBucketName": {
      "Value": {
        "Ref": "WebsiteBucket"
      }
    },
    "DistributionID": {
      "Value": {
        "Ref": "CDN"
      }
    },
    "WebsiteDomain": {
      "Value": {
        "Fn::GetAtt": [
          "CDN",
          "DomainName"
        ]
      }
    }
  }
}